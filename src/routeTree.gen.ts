/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AppRouteRouteImport } from './routes/_app/route'
import { Route as ServersIndexRouteImport } from './routes/servers/index'
import { Route as AppIndexRouteImport } from './routes/_app/index'
import { Route as ServersAddRouteImport } from './routes/servers/add'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'
import { Route as DemoTableRouteImport } from './routes/demo.table'
import { Route as DemoStoreRouteImport } from './routes/demo.store'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRouteRoute = AppRouteRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const ServersIndexRoute = ServersIndexRouteImport.update({
  id: '/servers/',
  path: '/servers/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)
const ServersAddRoute = ServersAddRouteImport.update({
  id: '/servers/add',
  path: '/servers/add',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTableRoute = DemoTableRouteImport.update({
  id: '/demo/table',
  path: '/demo/table',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStoreRoute = DemoStoreRouteImport.update({
  id: '/demo/store',
  path: '/demo/store',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/demo/store': typeof DemoStoreRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/servers/add': typeof ServersAddRoute
  '/': typeof AppIndexRoute
  '/servers': typeof ServersIndexRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/demo/store': typeof DemoStoreRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/servers/add': typeof ServersAddRoute
  '/': typeof AppIndexRoute
  '/servers': typeof ServersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/demo/store': typeof DemoStoreRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/servers/add': typeof ServersAddRoute
  '/_app/': typeof AppIndexRoute
  '/servers/': typeof ServersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/demo/store'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/servers/add'
    | '/'
    | '/servers'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/demo/store'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/servers/add'
    | '/'
    | '/servers'
  id:
    | '__root__'
    | '/_app'
    | '/login'
    | '/demo/store'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/servers/add'
    | '/_app/'
    | '/servers/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppRouteRoute: typeof AppRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
  DemoStoreRoute: typeof DemoStoreRoute
  DemoTableRoute: typeof DemoTableRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  ServersAddRoute: typeof ServersAddRoute
  ServersIndexRoute: typeof ServersIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/servers/': {
      id: '/servers/'
      path: '/servers'
      fullPath: '/servers'
      preLoaderRoute: typeof ServersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/servers/add': {
      id: '/servers/add'
      path: '/servers/add'
      fullPath: '/servers/add'
      preLoaderRoute: typeof ServersAddRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/table': {
      id: '/demo/table'
      path: '/demo/table'
      fullPath: '/demo/table'
      preLoaderRoute: typeof DemoTableRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/store': {
      id: '/demo/store'
      path: '/demo/store'
      fullPath: '/demo/store'
      preLoaderRoute: typeof DemoStoreRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface AppRouteRouteChildren {
  AppIndexRoute: typeof AppIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppIndexRoute: AppIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AppRouteRoute: AppRouteRouteWithChildren,
  LoginRoute: LoginRoute,
  DemoStoreRoute: DemoStoreRoute,
  DemoTableRoute: DemoTableRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  ServersAddRoute: ServersAddRoute,
  ServersIndexRoute: ServersIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
